<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-02T15:50:26 IST" name="Suite" finished-at="2023-11-02T15:50:28 IST" duration-ms="1999">
    <groups>
    </groups>
    <test started-at="2023-11-02T15:50:26 IST" name="Test" finished-at="2023-11-02T15:50:28 IST" duration-ms="1999">
      <class name="testcases.automationpracticetestcases">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:15 IST" name="setup" finished-at="2023-11-02T15:50:26 IST" duration-ms="10415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="extentreportsetup()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="extentreportsetup" finished-at="2023-11-02T15:50:26 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentreportsetup -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="launchApp" finished-at="2023-11-02T15:50:26 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.enteraddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="enteraddress()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="enteraddress" finished-at="2023-11-02T15:50:26 IST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteraddress -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="launchApp" finished-at="2023-11-02T15:50:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.enteremail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="enteremail()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="enteremail" finished-at="2023-11-02T15:50:26 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enteremail -->
        <test-method signature="enterphone()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="enterphone" finished-at="2023-11-02T15:50:26 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterphone -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="launchApp" finished-at="2023-11-02T15:50:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.enterphone()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="launchApp" finished-at="2023-11-02T15:50:26 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.newbrowserwindowbtn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="newbrowserwindowbtn()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:26 IST" name="newbrowserwindowbtn" finished-at="2023-11-02T15:50:27 IST" duration-ms="187" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This is Skippe]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This is Skippe
at testcases.automationpracticetestcases.newbrowserwindowbtn(automationpracticetestcases.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newbrowserwindowbtn -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="launchApp" finished-at="2023-11-02T15:50:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.selectgender()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="selectgender()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="selectgender" finished-at="2023-11-02T15:50:27 IST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectgender -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="launchApp" finished-at="2023-11-02T15:50:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.selectmonday()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="selectmonday()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="selectmonday" finished-at="2023-11-02T15:50:27 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectmonday -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="launchApp" finished-at="2023-11-02T15:50:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.selectsunday()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="selectsunday()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="selectsunday" finished-at="2023-11-02T15:50:27 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectsunday -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="launchApp" finished-at="2023-11-02T15:50:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.verifynewbrowserwindowtext()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="verifynewbrowserwindowtext()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="verifynewbrowserwindowtext" finished-at="2023-11-02T15:50:27 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifynewbrowserwindowtext -->
        <test-method is-config="true" signature="launchApp(java.lang.reflect.Method)[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="launchApp" finished-at="2023-11-02T15:50:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.automationpracticetestcases.verifypage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="verifypage()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:27 IST" name="verifypage" finished-at="2023-11-02T15:50:28 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifypage -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testcases.automationpracticetestcases@11d8ae8b]" started-at="2023-11-02T15:50:28 IST" name="teardown" finished-at="2023-11-02T15:50:28 IST" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testcases.automationpracticetestcases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
